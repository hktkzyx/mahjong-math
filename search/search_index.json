{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u9ebb\u5c06\u4e2d\u7684\u6570\u5b66\u95ee\u9898 \u672c\u9879\u76ee\u7528\u4e8e\u8ba1\u7b97\u9ebb\u5c06\u4e2d\u51fa\u73b0\u7684\u6570\u5b66\u95ee\u9898\uff0c\u5e0c\u671b\u901a\u8fc7\u7ec4\u5408\u6570\u5b66\u3001\u6982\u7387\u8bba\u548c\u6570\u7406\u7edf\u8ba1\u7684\u65b9\u6cd5\u7814\u7a76\u9ebb\u5c06\u7b56\u7565\u3002 \u9879\u76ee\u4e2d\u4ee5\u7acb\u76f4\u9ebb\u5c06\u4e3a\u89c4\u5219\u8303\u4f8b\u3002","title":"Home"},{"location":"#_1","text":"\u672c\u9879\u76ee\u7528\u4e8e\u8ba1\u7b97\u9ebb\u5c06\u4e2d\u51fa\u73b0\u7684\u6570\u5b66\u95ee\u9898\uff0c\u5e0c\u671b\u901a\u8fc7\u7ec4\u5408\u6570\u5b66\u3001\u6982\u7387\u8bba\u548c\u6570\u7406\u7edf\u8ba1\u7684\u65b9\u6cd5\u7814\u7a76\u9ebb\u5c06\u7b56\u7565\u3002 \u9879\u76ee\u4e2d\u4ee5\u7acb\u76f4\u9ebb\u5c06\u4e3a\u89c4\u5219\u8303\u4f8b\u3002","title":"\u9ebb\u5c06\u4e2d\u7684\u6570\u5b66\u95ee\u9898"},{"location":"api/","text":"Reference for Module probability mahjong_math.probability prob_get_expected_after_certain_turn ( turns_later : int , turns_remain : int , tiles_expect : int ) -> float The probability of get expected tile after turns_later set of turns. Parameters: Name Type Description Default turns_later int Get the expected tile after turns_after set of turns required turns_remain int The remaining turns required tiles_expect int The number of expected tiles required Returns: Type Description float Probability Source code in mahjong_math/probability.py def prob_get_expected_after_certain_turn ( turns_later : int , turns_remain : int , tiles_expect : int ) -> float : \"\"\"The probability of get expected tile after `turns_later` set of turns. :param turns_later: Get the expected tile after `turns_after` set of turns :param turns_remain: The remaining turns :param tiles_expect: The number of expected tiles :return: Probability \"\"\" tiles_remain = 4 * turns_remain + 14 if tiles_expect > turns_later : greater = tiles_remain - turns_later less = tiles_remain - tiles_expect else : greater = tiles_remain - tiles_expect less = tiles_remain - turns_later numerator , denominator = 1 , 1 i , j = less , greater while i > tiles_remain - turns_later - tiles_expect : numerator = numerator * i i = i - 1 while j > greater : denominator = denominator * j j = j - 1 return numerator / denominator","title":"Reference"},{"location":"api/#reference-for-module-probability","text":"","title":"Reference for Module probability"},{"location":"api/#mahjong_math.probability","text":"","title":"probability"},{"location":"api/#mahjong_math.probability.prob_get_expected_after_certain_turn","text":"The probability of get expected tile after turns_later set of turns. Parameters: Name Type Description Default turns_later int Get the expected tile after turns_after set of turns required turns_remain int The remaining turns required tiles_expect int The number of expected tiles required Returns: Type Description float Probability Source code in mahjong_math/probability.py def prob_get_expected_after_certain_turn ( turns_later : int , turns_remain : int , tiles_expect : int ) -> float : \"\"\"The probability of get expected tile after `turns_later` set of turns. :param turns_later: Get the expected tile after `turns_after` set of turns :param turns_remain: The remaining turns :param tiles_expect: The number of expected tiles :return: Probability \"\"\" tiles_remain = 4 * turns_remain + 14 if tiles_expect > turns_later : greater = tiles_remain - turns_later less = tiles_remain - tiles_expect else : greater = tiles_remain - tiles_expect less = tiles_remain - turns_later numerator , denominator = 1 , 1 i , j = less , greater while i > tiles_remain - turns_later - tiles_expect : numerator = numerator * i i = i - 1 while j > greater : denominator = denominator * j j = j - 1 return numerator / denominator","title":"prob_get_expected_after_certain_turn()"}]}